type ResultNat8 = variant {
  Ok: nat8;
  Err: text;
};

service : {
    "get": (key: vec nat8) -> (opt vec nat8) query;
    "put": (key: vec nat8, value: vec nat8) -> (nat64);
    "append": (key: vec nat8, value: vec nat8) -> (nat64);
    "reset": (nat) -> () oneway;
    "needs_data_buckets": () -> (nat);
    "add_data_buckets": (data_canister_ids: vec text) -> ();
    "total_used_bytes": () -> (nat);
    "lookup_data_bucket_for_get": (key: vec nat8) -> (opt text) query;
    "lookup_data_bucket_for_put": (key: vec nat8) -> (opt text) query;
    "set_data_bucket_canister_wasm_binary": (wasm_binary: vec nat8) -> ();
    "get_random_key": () -> (text) query;
    "set_used_bytes_threshold": (threshold: nat32) -> ();
    "maintenance": () -> (text);
}
